name: build-and-release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write  # required to create a release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      # Install Dependencies
      - name: Install deps (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libsdl2-dev libglew-dev mesa-common-dev libgl1-mesa-dev

      - name: Install deps (macOS)
        if: runner.os == 'macOS'
        run: brew update && brew install sdl2 glew

      - name: Install deps (Windows via vcpkg)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          git clone https://github.com/microsoft/vcpkg $env:VCPKG_ROOT
          & $env:VCPKG_ROOT\bootstrap-vcpkg.bat
          & $env:VCPKG_ROOT\vcpkg.exe install sdl2 glew --triplet x64-windows

      # Configurations
      - name: Configure (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: >
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_TOOLCHAIN_FILE="$env:VCPKG_ROOT\scripts\buildsystems\vcpkg.cmake"
          -DVCPKG_TARGET_TRIPLET=x64-windows

      - name: Configure (*nix)
        if: runner.os != 'Windows' # A little bold to assume that all non-Windows are *nix, but ah well
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build build --config Release

      - name: Package (CPack)
        shell: bash
        run: |
          cd build
          cpack -C Release
          mkdir -p artifacts
          # collect common archive names
          cp ./*.{zip,tgz,tar.gz} artifacts 2>/dev/null || true

      - name: Upload CI artifacts
        uses: actions/upload-artifact@v4
        with:
          name: llgml-${{ matrix.os }}
          path: build/artifacts/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
